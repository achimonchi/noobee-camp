{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\n\nvar Program = function Program(props) {\n  var _useState = useState(props.url.query.kelas),\n      className = _useState[0],\n      setClassName = _useState[1];\n\n  var _useState2 = useState([]),\n      listClass = _useState2[0],\n      setListClass = _useState2[1];\n\n  var _useState3 = useState(false),\n      notFound = _useState3[0],\n      setNotFound = _useState3[1];\n\n  useEffect(function () {\n    function setData() {\n      return _setData.apply(this, arguments);\n    }\n\n    function _setData() {\n      _setData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var list, flag;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                list = [\"IT\", \"Design\", \"Others\"];\n                setClassName(props.url.query.kelas);\n                setListClass(list);\n                _context.next = 5;\n                return list.find(function (l) {\n                  return props.url.query.kelas == l;\n                });\n\n              case 5:\n                flag = _context.sent;\n\n                if (!flag) {\n                  setNotFound(true);\n                } else {\n                  setNotFound(false);\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _setData.apply(this, arguments);\n    }\n\n    setData();\n  }, [props.url.query.kelas]);\n  return __jsx(Layout, {\n    activeClass: props.url.pathname\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row text-center\"\n  }, notFound ? __jsx(\"div\", {\n    className: \"col-md\"\n  }, __jsx(\"h1\", {\n    className: \"mt-3\"\n  }, \"404 \"), __jsx(\"h4\", {\n    className: \"mt-4\"\n  }, \"Maaf.. Kelas yang anda cari, tidak ditemukan\"), __jsx(\"h6\", null, \"List kelas yang tersedia : \"), __jsx(\"h6\", null, listClass.map(function (l, i) {\n    return __jsx(Link, {\n      href: \"/program?kelas=\" + l\n    }, __jsx(\"a\", {\n      className: \"mr-3\",\n      key: i\n    }, l));\n  }))) : __jsx(\"h1\", null, \"Program Class \", className))));\n};\n\nexport default Program;","map":null,"metadata":{},"sourceType":"module"}